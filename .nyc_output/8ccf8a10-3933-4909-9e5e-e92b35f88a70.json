{"/home/projects/homie/batch-pairs-generator/src/from-to.component.ts":{"path":"/home/projects/homie/batch-pairs-generator/src/from-to.component.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":21}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":35}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"7":{"start":{"line":13,"column":16},"end":{"line":13,"column":17}},"8":{"start":{"line":14,"column":23},"end":{"line":14,"column":36}},"9":{"start":{"line":15,"column":8},"end":{"line":22,"column":10}},"10":{"start":{"line":17,"column":16},"end":{"line":20,"column":18}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":26},"end":{"line":11,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":24},"end":{"line":23,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":12},"end":{"line":16,"column":13}},"loc":{"start":{"line":16,"column":19},"end":{"line":21,"column":13}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":24,"3":24,"4":24,"5":24,"6":24,"7":5,"8":5,"9":5,"10":10,"11":1},"f":{"0":24,"1":5,"2":10},"b":{},"inputSourceMap":{"version":3,"file":"/home/projects/homie/batch-pairs-generator/src/from-to.component.ts","sources":["/home/projects/homie/batch-pairs-generator/src/from-to.component.ts"],"names":[],"mappings":";;;AAAA,MAAa,MAAM;IAMf,YACoB,IAAY,EACZ,EAAU;QADV,SAAI,GAAJ,IAAI,CAAQ;QACZ,OAAE,GAAF,EAAE,CAAQ;QAE1B,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,CAAC,MAAM,CAAC,QAAQ,CAAC;QACb,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE7B,OAAO;YACH,IAAI;gBACA,OAAO;oBACH,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC;oBACpB,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM;iBAC5B,CAAC;YACN,CAAC;SACJ,CAAA;IACL,CAAC;CAEJ;AA7BD,wBA6BC","sourcesContent":["export class FromTo implements Iterable<number> {\n    private iterable: [number, number];\n\n    public readonly 0: number;\n    public readonly 1: number;\n\n    constructor(\n        public readonly from: number,\n        public readonly to: number,\n    ) {\n        this.iterable = [from, to];\n        this[0] = from;\n        this[1] = to;\n    }\n\n    [Symbol.iterator]() {\n        let i = 0;\n        let iterable = this.iterable;\n\n        return {\n            next(): IteratorResult<number>{\n                return {\n                    value: iterable[i++],\n                    done: i > iterable.length,\n                };\n            }\n        }\n    }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9c612e2982b2469b0f67d64e1424f6ef02e49687","contentHash":"7dc3289a30d3a491136a5bb63c579bb8318128801ca786dbac150f5d94a9ec49"},"/home/projects/homie/batch-pairs-generator/src/index.ts":{"path":"/home/projects/homie/batch-pairs-generator/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":19},"end":{"line":11,"column":1}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":126}},"10":{"start":{"line":10,"column":21},"end":{"line":10,"column":126}},"11":{"start":{"line":10,"column":95},"end":{"line":10,"column":126}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"13":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":42}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":50},"end":{"line":9,"column":51}},"loc":{"start":{"line":9,"column":71},"end":{"line":11,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":19},"end":{"line":11,"column":1}},"type":"binary-expr","locations":[{"start":{"line":9,"column":20},"end":{"line":9,"column":24}},{"start":{"line":9,"column":28},"end":{"line":9,"column":45}},{"start":{"line":9,"column":50},"end":{"line":11,"column":1}}],"line":9},"5":{"loc":{"start":{"line":10,"column":21},"end":{"line":10,"column":126}},"type":"if","locations":[{"start":{"line":10,"column":21},"end":{"line":10,"column":126}},{"start":{"line":10,"column":21},"end":{"line":10,"column":126}}],"line":10},"6":{"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":93}},"type":"binary-expr","locations":[{"start":{"line":10,"column":25},"end":{"line":10,"column":40}},{"start":{"line":10,"column":44},"end":{"line":10,"column":93}}],"line":10}},"s":{"0":1,"1":5,"2":5,"3":5,"4":13,"5":0,"6":0,"7":0,"8":1,"9":3,"10":5,"11":5,"12":1,"13":1,"14":1,"15":1},"f":{"0":5,"1":13,"2":0,"3":3},"b":{"0":[1,1,1],"1":[1,0],"2":[5,0],"3":[0,0],"4":[1,1,1],"5":[5,0],"6":[5,5]},"inputSourceMap":{"version":3,"file":"/home/projects/homie/batch-pairs-generator/src/index.ts","sources":["/home/projects/homie/batch-pairs-generator/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6CAA2B;AAC3B,0CAAwB;AACxB,4CAAyB","sourcesContent":["export * from './iterator';\nexport * from './pairs';\nexport * from './iterate'\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0caedc0733f9b231b9a6b8b5286ef03f338980a4","contentHash":"f6c99cc1a125fdbc769067e69e7a9be26cf1454df9737367db1adfeb19bc8fed"},"/home/projects/homie/batch-pairs-generator/src/iterator.ts":{"path":"/home/projects/homie/batch-pairs-generator/src/iterator.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":90}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":28},"end":{"line":8,"column":58}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":72}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":68}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":74}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":65}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":99}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"12":{"start":{"line":24,"column":17},"end":{"line":24,"column":30}},"13":{"start":{"line":25,"column":26},"end":{"line":25,"column":38}},"14":{"start":{"line":26,"column":29},"end":{"line":26,"column":59}},"15":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"16":{"start":{"line":27,"column":17},"end":{"line":27,"column":18}},"17":{"start":{"line":28,"column":22},"end":{"line":28,"column":40}},"18":{"start":{"line":29,"column":20},"end":{"line":29,"column":37}},"19":{"start":{"line":30,"column":8},"end":{"line":30,"column":57}},"20":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"21":{"start":{"line":33,"column":22},"end":{"line":33,"column":44}},"22":{"start":{"line":34,"column":8},"end":{"line":34,"column":56}},"23":{"start":{"line":37,"column":0},"end":{"line":37,"column":48}},"24":{"start":{"line":39,"column":17},"end":{"line":39,"column":30}},"25":{"start":{"line":40,"column":26},"end":{"line":40,"column":38}},"26":{"start":{"line":41,"column":29},"end":{"line":41,"column":59}},"27":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"28":{"start":{"line":42,"column":17},"end":{"line":42,"column":33}},"29":{"start":{"line":43,"column":22},"end":{"line":43,"column":42}},"30":{"start":{"line":44,"column":20},"end":{"line":44,"column":37}},"31":{"start":{"line":45,"column":8},"end":{"line":45,"column":57}},"32":{"start":{"line":47,"column":4},"end":{"line":50,"column":5}},"33":{"start":{"line":48,"column":20},"end":{"line":48,"column":44}},"34":{"start":{"line":49,"column":8},"end":{"line":49,"column":56}},"35":{"start":{"line":52,"column":0},"end":{"line":52,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"batchIterator","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":22}},"loc":{"start":{"line":15,"column":40},"end":{"line":21,"column":1}},"line":15},"2":{"name":"aheadBatchIterator","decl":{"start":{"line":23,"column":10},"end":{"line":23,"column":28}},"loc":{"start":{"line":23,"column":46},"end":{"line":36,"column":1}},"line":23},"3":{"name":"behindBatchIterator","decl":{"start":{"line":38,"column":10},"end":{"line":38,"column":29}},"loc":{"start":{"line":38,"column":47},"end":{"line":51,"column":1}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":20,"column":11},"end":{"line":20,"column":98}},"type":"cond-expr","locations":[{"start":{"line":20,"column":24},"end":{"line":20,"column":59}},{"start":{"line":20,"column":62},"end":{"line":20,"column":98}}],"line":20},"4":{"loc":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},{"start":{"line":32,"column":4},"end":{"line":35,"column":5}}],"line":32},"5":{"loc":{"start":{"line":47,"column":4},"end":{"line":50,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":50,"column":5}},{"start":{"line":47,"column":4},"end":{"line":50,"column":5}}],"line":47}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":13,"7":13,"8":13,"9":13,"10":13,"11":1,"12":8,"13":8,"14":8,"15":8,"16":8,"17":9,"18":9,"19":9,"20":8,"21":6,"22":6,"23":1,"24":5,"25":5,"26":5,"27":5,"28":5,"29":4,"30":4,"31":4,"32":5,"33":4,"34":4,"35":1},"f":{"0":1,"1":13,"2":8,"3":5},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[8,5],"4":[6,2],"5":[4,1]},"inputSourceMap":{"version":3,"file":"/home/projects/homie/batch-pairs-generator/src/iterator.ts","sources":["/home/projects/homie/batch-pairs-generator/src/iterator.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAC5B,2DAA6C;AAE7C;;;;;GAKG;AACH,SAAgB,aAAa,CAAC,IAAY,EAAE,EAAU,EAAE,KAAa;IACjE,gBAAM,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,qBAAqB,CAAC,CAAC;IAC1D,gBAAM,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,mBAAmB,CAAC,CAAC;IACtD,gBAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;IAC5D,gBAAM,CAAC,KAAK,GAAG,CAAC,EAAE,+BAA+B,CAAC,CAAC;IACnD,OAAO,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACnG,CAAC;AAND,sCAMC;AAED,QAAe,CAAC,CAAC,kBAAkB,CAAC,IAAY,EAAE,EAAU,EAAE,KAAa;IACvE,MAAM,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;IAC3B,MAAM,aAAa,GAAG,IAAI,GAAG,KAAK,CAAC;IACnC,MAAM,gBAAgB,GAAG,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG,KAAK,CAAC;IAExD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,IAAI,CAAC,EAAE;QAC1C,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;QAC9B,MAAM,IAAI,0BAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAChC;IAED,IAAI,aAAa,EAAE;QACf,MAAM,KAAK,GAAG,EAAE,GAAG,aAAa,GAAG,CAAC,CAAC;QACrC,MAAM,IAAI,0BAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KAC/B;AACL,CAAC;AAfD,gDAeC;AAED,QAAe,CAAC,CAAC,mBAAmB,CAAC,IAAY,EAAE,EAAU,EAAE,KAAa;IACxE,MAAM,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;IAC3B,MAAM,aAAa,GAAG,IAAI,GAAG,KAAK,CAAC;IACnC,MAAM,gBAAgB,GAAG,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG,KAAK,CAAC;IACxD,KAAK,IAAI,CAAC,GAAG,gBAAgB,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;QAC1C,MAAM,KAAK,GAAG,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;QAC9B,MAAM,IAAI,0BAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAChC;IAED,IAAI,aAAa,EAAE;QACf,MAAM,GAAG,GAAG,IAAI,GAAG,aAAa,GAAG,CAAC,CAAC;QACrC,MAAM,IAAI,0BAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAC/B;AACL,CAAC;AAdD,kDAcC","sourcesContent":["import assert from 'assert';\nimport { FromTo } from './from-to.component';\n\n/**\n * @description Create a batch iterator. \n * @param from generate from. `from` can be less than `to`\n * @param to generate to\n * @param batch batch size\n */\nexport function batchIterator(from: number, to: number, batch: number): Generator<FromTo, void, void> {\n    assert(Number.isSafeInteger(from), 'From is not integer');\n    assert(Number.isSafeInteger(to), 'To is not integer');\n    assert(Number.isSafeInteger(batch), 'Batch is not integer');\n    assert(batch > 0, 'batch should be bigger than 0');\n    return from <= to ? aheadBatchIterator(from, to, batch) : behindBatchIterator(to, from, batch);\n}\n\nexport function* aheadBatchIterator(from: number, to: number, batch: number): Generator<FromTo, void, void> {\n    const size = to - from + 1;\n    const lastBatchSize = size % batch;\n    const normalPairsCount = (size - lastBatchSize) / batch;\n\n    for (let i = 0; i < normalPairsCount; i += 1) {\n        const cFrom = from + (batch * i);\n        const cTo = cFrom + batch - 1;\n        yield new FromTo(cFrom, cTo);\n    }\n\n    if (lastBatchSize) {\n        const cFrom = to - lastBatchSize + 1;\n        yield new FromTo(cFrom, to);\n    }\n}\n\nexport function* behindBatchIterator(from: number, to: number, batch: number): Generator<FromTo, void, void> {\n    const size = to - from + 1;\n    const lastBatchSize = size % batch;\n    const normalPairsCount = (size - lastBatchSize) / batch;\n    for (let i = normalPairsCount; i > 0; i -= 1) {\n        const cFrom = to - (batch * i) + 1;\n        const cTo = cFrom + batch - 1;\n        yield new FromTo(cFrom, cTo);\n    }\n    \n    if (lastBatchSize) {\n        const cTo = from + lastBatchSize - 1;\n        yield new FromTo(from, cTo);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4ddbe73a47451b5694ad172379c8122ef1245837","contentHash":"ae8250b5ada2d26ba8609d3017e3eef0c864e3f055fc7e4c409156cf5269ec9a"},"/home/projects/homie/batch-pairs-generator/src/pairs.ts":{"path":"/home/projects/homie/batch-pairs-generator/src/pairs.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":40}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":65}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}}},"fnMap":{"0":{"name":"batchPairs","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":37},"end":{"line":10,"column":1}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/projects/homie/batch-pairs-generator/src/pairs.ts","sources":["/home/projects/homie/batch-pairs-generator/src/pairs.ts"],"names":[],"mappings":";;;AACA,yCAA2C;AAE3C;;GAEG;AACH,SAAgB,UAAU,CAAC,IAAY,EAAE,EAAU,EAAE,KAAa;IAC9D,OAAO,KAAK,CAAC,IAAI,CAAC,wBAAa,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;AACtD,CAAC;AAFD,gCAEC","sourcesContent":["import { FromTo } from './from-to.component';\nimport { batchIterator } from './iterator';\n\n/**\n * @description Obtain batch iterator into an array\n */\nexport function batchPairs(from: number, to: number, batch: number): FromTo[] {\n    return Array.from(batchIterator(from, to, batch));\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1a936a49118f9a00267d55d6b022c52448d5016d","contentHash":"a31dc040f2ed287b13b37a61319d4a08b9037cba415dd05107321954ad02b780"},"/home/projects/homie/batch-pairs-generator/src/iterate.ts":{"path":"/home/projects/homie/batch-pairs-generator/src/iterate.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"14":{"start":{"line":13,"column":19},"end":{"line":13,"column":40}},"15":{"start":{"line":18,"column":4},"end":{"line":24,"column":7}},"16":{"start":{"line":19,"column":24},"end":{"line":19,"column":26}},"17":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"18":{"start":{"line":21,"column":12},"end":{"line":21,"column":55}},"19":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"20":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"batchIterate","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":21}},"loc":{"start":{"line":17,"column":43},"end":{"line":25,"column":1}},"line":17},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":43},"end":{"line":18,"column":44}},"loc":{"start":{"line":18,"column":56},"end":{"line":24,"column":5}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":5,"2":0,"3":1,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":6,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":5,"19":1,"20":1},"f":{"0":1,"1":5,"2":0,"3":1,"4":5,"5":0,"6":6,"7":1,"8":1},"b":{"0":[1,1,1],"1":[5,0],"2":[1,1],"3":[1,5],"4":[1,1]},"inputSourceMap":{"version":3,"file":"/home/projects/homie/batch-pairs-generator/src/iterate.ts","sources":["/home/projects/homie/batch-pairs-generator/src/iterate.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yCAA2C;AAI3C;;GAEG;AACH,SAAsB,YAAY,CAAI,IAAY,EAAE,EAAU,EAAE,KAAa,EAAE,EAAa;;QACxF,MAAM,OAAO,GAAG,EAAS,CAAC;QAC1B,KAAK,MAAM,IAAI,IAAI,wBAAa,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE;YAC/C,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9C;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;CAAA;AAND,oCAMC","sourcesContent":["import { batchIterator } from \"./iterator\";\n\nexport type Action<T extends unknown> = (from: number, to: number) => T | Promise<T>;\n\n/**\n * @description synchronously (one-after-one) apply callback for every batch pair\n */\nexport async function batchIterate<T>(from: number, to: number, batch: number, cb: Action<T>): Promise<T[]> {\n    const results = [] as T[];\n    for (const pair of batchIterator(from, to, batch)) {\n        results.push(await cb(pair.from, pair.to));\n    }\n    return results;\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"04cb5596f64c6901d42dd6c2f3ade674fb4a7084","contentHash":"ea08ab0a48e2bb65d29651187663c790c38aa0dbdfe5232878e715f9ecec159e"}}